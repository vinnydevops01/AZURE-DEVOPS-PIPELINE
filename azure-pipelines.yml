# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: CI-CD

trigger:
- master

pool:
  vmImage: ubuntu-latest

stages:
- stage: CI
  displayName: 'Continuous Integration'
  jobs:
    - job: BuildAndTest
      displayName: 'Build do Projeto'
      steps:
      - task: DotNetCoreCLI@2
        displayName: Build
        inputs:
          command: 'build'
          projects: './src/Review-Filmes.sln'
      - task: DotNetCoreCLI@2
        displayName: Test
        inputs:
          command: 'test'
          projects: './src/Review-Filmes.Test.Unit/Review-Filmes.Test.Unit.csproj'
    - job: Release
      displayName: 'Release Docker'
      dependsOn: BuildAndTest
      steps:
        - task: Docker@2
          inputs:
            containerRegistry: 'DockerHub'
            repository: 'vinnydevops01/azure-devops-pipeline'
            command: 'buildAndPush'
            Dockerfile: './src/Review-Filmes.Web/Dockerfile'
            buildContext: './src'
            tags: |
              $(Build.BuildId)
              latest
- stage: CD
  displayName: 'Continuous Deployment'
  jobs:
    - job: Deploy
      displayName: 'Deploy no Kubernetes'
      steps: 
      - task: KubernetesManifest@1
        inputs:
          action: 'deploy'
          connectionType: 'kubernetesServiceConnection'
          kubernetesServiceConnection: 'AKS-KUBE-PIPELINE'
          namespace: 'default'
          manifests: './k8s/deployment.yaml'
          containers: 'vinnydevops01/azure-devops-pipeline:$(Build.BuildId)'
